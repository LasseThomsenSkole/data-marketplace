generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String     @id @default(uuid())
  email                     String     @unique
  name                      String?
  password                  String
  role                      Role       @default(USER)
  datasets                  Dataset[]  @relation("UserDatasets")
  purchases                 Purchase[] @relation("UserPurchases")
  stripeAccountId           String?
  stripeOnboardingCompleted Boolean    @default(false)
  createdAt                 DateTime   @default(now())
}

enum Role {
  USER
  ADMIN
}

model Purchase {
  id              String         @id @default(uuid())
  buyerId         String
  datasetId       String
  buyer           User           @relation("UserPurchases", fields: [buyerId], references: [id])
  dataset         Dataset        @relation(fields: [datasetId], references: [id])
  stripeSessionId String?
  status          PurchaseStatus @default(PENDING)
  paidAmount      Int? // amount paid in cents
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

enum PurchaseStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

model Dataset {
  id              String        @id @default(uuid())
  title           String
  description     String
  filekey         String
  filetype        String
  filesize        Int
  tags            String[]
  sampleData      String
  price           Int // in cents for Stripe
  sellerId        String
  status          DatasetStatus @default(PROCESSING)
  category        String?
  additionalFiles Json?
  seller          User          @relation("UserDatasets", fields: [sellerId], references: [id])
  purchases       Purchase[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

enum DatasetStatus {
  PROCESSING
  AVAILABLE
  UNAVAILABLE
}
